# Bookwyrm Traefik Integration Override
# This file is automatically copied to external/bookwyrm-docker/ during setup
# It configures Bookwyrm to work with Traefik reverse proxy

services:
  # nginx is the entry point - it serves static files and proxies to bookwyrm app
  nginx:
    # Add homeserver network for Traefik discovery
    networks:
      - homeserver

    # Override health check - give nginx more time to start and use curl instead of wget
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:80 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

    # Traefik labels for domain-based access
    labels:
      # Enable Traefik for this service
      - "traefik.enable=true"

      # Specify which network Traefik should use to connect
      - "traefik.docker.network=home-server-stack_homeserver"

      # HTTP Router (redirect to HTTPS)
      - "traefik.http.routers.bookwyrm-http.rule=Host(`bookwyrm.home.local`)"
      - "traefik.http.routers.bookwyrm-http.entrypoints=web"
      - "traefik.http.routers.bookwyrm-http.middlewares=redirect-to-https"

      # HTTPS Router
      - "traefik.http.routers.bookwyrm.rule=Host(`bookwyrm.home.local`)"
      - "traefik.http.routers.bookwyrm.entrypoints=websecure"
      - "traefik.http.routers.bookwyrm.tls=true"

      # Service configuration - nginx listens on port 80
      - "traefik.http.services.bookwyrm.loadbalancer.server.port=80"

      # Middleware for HTTPS redirect
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"

  # Explicitly disable Traefik for internal services
  bookwyrm-db:
    labels:
      - "traefik.enable=false"

  bookwyrm-redis-activity:
    labels:
      - "traefik.enable=false"

  bookwyrm-redis-broker:
    labels:
      - "traefik.enable=false"

  bookwyrm:
    labels:
      - "traefik.enable=false"

  bookwyrm-celery:
    labels:
      - "traefik.enable=false"

  bookwyrm-celery-beat:
    labels:
      - "traefik.enable=false"

# Declare external homeserver network
# This network is created by the main home-server-stack docker-compose.yml
# Docker Compose prefixes network names with the project name
networks:
  homeserver:
    name: home-server-stack_homeserver
    external: true
