---
services:
  # Habitica - Gamified habit and task tracker
  habitica-mongo:
    image: mongo:${HABITICA_MONGO_VERSION:-5.0}
    container_name: habitica-mongo
    restart: unless-stopped
    command: ["--replSet", "rs", "--bind_ip_all", "--port", "27017"]
    environment:
      - TZ=${TIMEZONE}
    volumes:
      - ./data/habitica/db:/data/db
      - ./data/habitica/dbconf:/data/configdb
    networks:
      - homeserver
    healthcheck:
      test:
        - CMD-SHELL
        - >
          echo "try { rs.status() } catch (err) {
          rs.initiate({_id:'rs',members:[{_id:0,host:'habitica-mongo:27017'}]})
          }" | mongosh --port 27017 --quiet
      interval: 10s
      timeout: 30s
      start_period: 10s
      start_interval: 1s
      retries: 30

  habitica-server:
    image: awinterstein/habitica-server:${HABITICA_VERSION:-latest}
    container_name: habitica-server
    restart: unless-stopped
    ports:
      - "${SERVER_IP}:3002:3000"
    environment:
      - NODE_DB_URI=mongodb://habitica-mongo/habitica
      - BASE_URL=${HABITICA_BASE_URL:-http://127.0.0.1:8080}
      - INVITE_ONLY=${HABITICA_INVITE_ONLY:-false}
      - EMAIL_SERVER_URL=${HABITICA_EMAIL_SERVER_URL:-}
      - EMAIL_SERVER_PORT=${HABITICA_EMAIL_SERVER_PORT:-587}
      - EMAIL_SERVER_AUTH_USER=${HABITICA_EMAIL_AUTH_USER:-}
      - EMAIL_SERVER_AUTH_PASSWORD=${HABITICA_EMAIL_AUTH_PASSWORD:-}
      - ADMIN_EMAIL=${HABITICA_ADMIN_EMAIL:-}
      - TZ=${TIMEZONE}
    networks:
      homeserver:
        aliases:
          - server
    depends_on:
      habitica-mongo:
        condition: service_healthy
    healthcheck:
      test:
        - CMD-SHELL
        - wget --quiet --tries=1 --spider http://localhost:3000/api/v3/status || exit 1
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 60s

  habitica-client:
    image: awinterstein/habitica-client:${HABITICA_VERSION:-latest}
    container_name: habitica-client
    restart: unless-stopped
    ports:
      - "${SERVER_IP}:8080:80"
    environment:
      - TZ=${TIMEZONE}
    networks:
      - homeserver
    depends_on:
      habitica-server:
        condition: service_healthy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.habitica-http.rule=Host(`habitica.home.local`)"
      - "traefik.http.routers.habitica-http.entrypoints=web"
      - "traefik.http.routers.habitica-http.middlewares=redirect-to-https"
      - "traefik.http.routers.habitica.rule=Host(`habitica.home.local`)"
      - "traefik.http.routers.habitica.entrypoints=websecure"
      - "traefik.http.routers.habitica.tls=true"
      - "traefik.http.services.habitica.loadbalancer.server.port=80"
    healthcheck:
      test: ["CMD-SHELL", "wget --quiet --tries=1 --spider http://localhost:80 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

networks:
  homeserver:
    driver: bridge
