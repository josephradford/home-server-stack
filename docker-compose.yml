---
services:
  adguard:
    image: adguard/adguardhome:latest
    container_name: adguard-home
    restart: unless-stopped
    ports:
      - "${SERVER_IP}:53:53/tcp"
      - "${SERVER_IP}:53:53/udp"
      - "${SERVER_IP}:3000:3000/tcp"
      - "${SERVER_IP}:8888:80/tcp"
    volumes:
      - ./data/adguard/work:/opt/adguardhome/work
      - ./data/adguard/conf:/opt/adguardhome/conf
    networks:
      - homeserver
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.adguard.rule=Host(`adguard.${DOMAIN}`)"
      - "traefik.http.routers.adguard.entrypoints=websecure"
      - "traefik.http.routers.adguard.tls=true"
      # Using file provider certificate (wildcard from certbot)
      - "traefik.http.services.adguard.loadbalancer.server.port=80"

  n8n-init:
    image: alpine:latest
    container_name: n8n-init
    restart: "no"
    volumes:
      - ./data/n8n:/data
    command: >
      sh -c "
        mkdir -p /data &&
        chown -R 1000:1000 /data &&
        chmod -R 755 /data
      "

  n8n:
    image: n8nio/n8n:latest
    container_name: n8n
    restart: unless-stopped
    user: "1000:1000"
    expose:
      - 5678
    environment:
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=${N8N_USER}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_PASSWORD}
      - N8N_HOST=n8n.${DOMAIN}
      - N8N_PORT=5678
      - N8N_PROTOCOL=https
      - WEBHOOK_URL=https://n8n.${DOMAIN}/
      - N8N_EDITOR_BASE_URL=https://n8n.${DOMAIN}
      - GENERIC_TIMEZONE=${TIMEZONE}
      - N8N_SECURE_COOKIE=true
      - N8N_RUNNERS_TASK_TIMEOUT=${N8N_RUNNERS_TASK_TIMEOUT}
      - EXECUTIONS_TIMEOUT=${EXECUTIONS_TIMEOUT}
      - EXECUTIONS_TIMEOUT_MAX=${EXECUTIONS_TIMEOUT_MAX}
    volumes:
      - ./data/n8n:/home/node/.n8n
    networks:
      - homeserver
    depends_on:
      - n8n-init
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.n8n.rule=Host(`n8n.${DOMAIN}`)"
      - "traefik.http.routers.n8n.entrypoints=websecure"
      - "traefik.http.routers.n8n.tls=true"
      # Using file provider certificate (wildcard from certbot)
      - "traefik.http.services.n8n.loadbalancer.server.port=5678"

  wireguard:
    image: lscr.io/linuxserver/wireguard:latest
    container_name: wireguard
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    # Security note: LinuxServer.io containers use s6-overlay init system
    # Dropping all capabilities or no-new-privileges prevents init from executing
    # Keep only the required NET_ADMIN and SYS_MODULE capabilities
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
      - SERVERURL=${WIREGUARD_SERVERURL}
      - SERVERPORT=${WIREGUARD_PORT:-51820}
      - PEERS=${WIREGUARD_PEERS:-5}
      - PEERDNS=${SERVER_IP}
      # CRITICAL: Split tunneling - only route home network traffic through VPN
      # DO NOT use 0.0.0.0/0 unless you want full tunneling (not recommended)
      - INTERNAL_SUBNET=${WIREGUARD_SUBNET:-10.13.13.0/24}
      - ALLOWEDIPS=${WIREGUARD_ALLOWEDIPS:-192.168.1.0/24,10.13.13.0/24}
      - LOG_CONFS=${WIREGUARD_LOG_CONFS:-true}
      - PERSISTENTKEEPALIVE_PEERS=${WIREGUARD_KEEPALIVE:-25}
    ports:
      - "${WIREGUARD_PORT:-51820}:51820/udp"
      - "${SERVER_IP}:51821:51821/tcp"
    volumes:
      - ./data/wireguard:/config
      - /lib/modules:/lib/modules:ro
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
      - net.ipv4.ip_forward=1
    networks:
      - homeserver
    healthcheck:
      test: ["CMD", "test", "-f", "/config/wg0.conf"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Traefik - Reverse proxy for domain-based service access
  traefik:
    image: traefik:v3.2
    container_name: traefik
    restart: unless-stopped
    command:
      # API and Dashboard
      - "--api.dashboard=true"
      - "--api.insecure=false"

      # Docker provider
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"

      # File provider for TLS certificates
      - "--providers.file.directory=/etc/traefik"
      - "--providers.file.watch=true"

      # Entrypoints
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"

      # HTTP to HTTPS redirect
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"

      # TLS
      - "--entrypoints.websecure.http.tls=true"

      # Ping endpoint for health checks
      - "--ping=true"

      # Logging
      - "--accesslog=true"
      - "--accesslog.filepath=/var/log/traefik/access.log"
      - "--log.level=DEBUG"

    ports:
      - "${SERVER_IP}:80:80"
      - "${SERVER_IP}:443:443"

    environment:
      # Traefik dashboard password (hashed with htpasswd)
      # Generated during setup from TRAEFIK_PASSWORD in .env
      - TRAEFIK_DASHBOARD_USERS=${TRAEFIK_DASHBOARD_USERS}

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./data/traefik/certs:/certs
      - ./data/traefik/logs:/var/log/traefik
      - ./config/traefik:/etc/traefik:ro

    networks:
      - homeserver

    labels:
      # Enable Traefik for the dashboard
      - "traefik.enable=true"

      # Dashboard router
      - "traefik.http.routers.dashboard.rule=Host(`traefik.${DOMAIN}`)"
      - "traefik.http.routers.dashboard.entrypoints=websecure"
      - "traefik.http.routers.dashboard.tls=true"
      # Using file provider certificate (wildcard from certbot)
      - "traefik.http.routers.dashboard.service=api@internal"

      # Dashboard middleware (basic auth)
      # Uses TRAEFIK_DASHBOARD_USERS from .env (htpasswd format: admin:$apr1$...)
      - "traefik.http.middlewares.dashboard-auth.basicauth.users=${TRAEFIK_DASHBOARD_USERS}"
      - "traefik.http.routers.dashboard.middlewares=dashboard-auth"

      # Security Headers Middleware
      - "traefik.http.middlewares.security-headers.headers.frameDeny=true"
      - "traefik.http.middlewares.security-headers.headers.browserXssFilter=true"
      - "traefik.http.middlewares.security-headers.headers.contentTypeNosniff=true"
      - "traefik.http.middlewares.security-headers.headers.stsSeconds=31536000"
      - "traefik.http.middlewares.security-headers.headers.stsIncludeSubdomains=true"
      - "traefik.http.middlewares.security-headers.headers.stsPreload=true"

      # Rate Limiting for Webhooks (generous for legitimate use)
      - "traefik.http.middlewares.webhook-ratelimit.ratelimit.average=100"
      - "traefik.http.middlewares.webhook-ratelimit.ratelimit.period=1m"
      - "traefik.http.middlewares.webhook-ratelimit.ratelimit.burst=50"

      # Strict Rate Limiting for Admin Access
      - "traefik.http.middlewares.admin-ratelimit.ratelimit.average=10"
      - "traefik.http.middlewares.admin-ratelimit.ratelimit.period=1m"
      - "traefik.http.middlewares.admin-ratelimit.ratelimit.burst=5"

      # IP Whitelist for Internal Services (RFC1918 + VPN)
      - "traefik.http.middlewares.internal-only.ipwhitelist.sourcerange=192.168.0.0/16,172.16.0.0/12,10.0.0.0/8"

      # Webhook Security Chain
      - "traefik.http.middlewares.webhook-secure.chain.middlewares=security-headers,webhook-ratelimit"

      # Admin Security Chain
      - "traefik.http.middlewares.admin-secure.chain.middlewares=internal-only,security-headers,admin-ratelimit"

    healthcheck:
      test: ["CMD", "traefik", "healthcheck", "--ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Fail2ban - Protection against brute force and scanning attempts
  fail2ban:
    image: crazymax/fail2ban:latest
    container_name: fail2ban
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
      - NET_RAW
    environment:
      - TZ=${TIMEZONE}
      - F2B_DB_PURGE_AGE=30d
      - F2B_LOG_LEVEL=INFO
    volumes:
      - ./data/fail2ban:/data
      - ./data/traefik/logs:/var/log/traefik:ro
      - ./config/fail2ban/jail.local:/etc/fail2ban/jail.local:ro
      - ./config/fail2ban/filter.d:/etc/fail2ban/filter.d:ro
    network_mode: host

networks:
  homeserver:
    driver: bridge
